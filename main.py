import os
import json
import requests
from datetime import datetime, timedelta
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not all(key in os.environ for key in ["CREDENTIALS_JSON", "TOKEN_JSON", "DISCORD_WEBHOOK_URL"]):
    raise Exception("‚ùóÔ∏è–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è: CREDENTIALS_JSON, TOKEN_JSON –∏–ª–∏ DISCORD_WEBHOOK_URL")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
credentials_json = json.loads(os.environ["CREDENTIALS_JSON"])
token_json = json.loads(os.environ["TOKEN_JSON"])
webhook_url = os.environ["DISCORD_WEBHOOK_URL"]

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
creds = Credentials.from_authorized_user_info(info=token_json)

# –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å Google Calendar
service = build("calendar", "v3", credentials=creds)

def check_upcoming_events():
    print("üìÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π...")
    calendar_list = service.calendarList().list().execute()
    for calendar in calendar_list["items"]:
        print(f"- {calendar['summary']} (ID: {calendar['id']})")

    # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å ‚Äî –∑–∞–º–µ–Ω–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    calendar_id = "primary"

    now = datetime.utcnow().isoformat() + "Z"
    end_time = (datetime.utcnow() + timedelta(hours=12)).isoformat() + "Z"

    print(f"\nüîç –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π —Å {now} –ø–æ {end_time} –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ: {calendar_id}")

    events_result = service.events().list(
        calendarId=calendar_id,
        timeMin=now,
        timeMax=end_time,
        singleEvents=True,
        orderBy="startTime"
    ).execute()

    events = events_result.get("items", [])

    if not events:
        print("‚õîÔ∏è –ù–µ—Ç —Å–æ–±—ã—Ç–∏–π.")
        return

    for event in events:
        start = event["start"].get("dateTime", event["start"].get("date"))
        summary = event.get("summary", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
        event_time = datetime.fromisoformat(start.replace("Z", "+00:00")).strftime("%H:%M %d.%m.%Y")

        message = f"üìå **{summary}**\nüïí {event_time}"
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Discord: {message}")
        requests.post(webhook_url, json={"content": message})

# –ó–∞–ø—É—Å–∫
check_upcoming_events()

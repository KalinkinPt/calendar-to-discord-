import os
import json
import time
from datetime import datetime, timedelta, timezone
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build
import requests

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not all(key in os.environ for key in ["CREDENTIALS_JSON", "TOKEN_JSON", "DISCORD_WEBHOOK_URL"]):
    raise Exception("‚ùóÔ∏è–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è: CREDENTIALS_JSON, TOKEN_JSON –∏–ª–∏ DISCORD_WEBHOOK_URL")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
CREDENTIALS_JSON = json.loads(os.environ["CREDENTIALS_JSON"])
TOKEN_JSON = json.loads(os.environ["TOKEN_JSON"])
DISCORD_WEBHOOK_URL = os.environ["DISCORD_WEBHOOK_URL"]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
sent_event_ids = set()

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
def get_calendar_service():
    creds = Credentials.from_authorized_user_info(TOKEN_JSON, ["https://www.googleapis.com/auth/calendar.readonly"])
    return build("calendar", "v3", credentials=creds)

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–±—ã—Ç–∏–π
def check_upcoming_events():
    print("\nüìÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π...")
    service = get_calendar_service()

    now = datetime.now(timezone.utc).isoformat()
    end_time = (datetime.now(timezone.utc) + timedelta(hours=12)).isoformat()

    calendar_id = 'primary'  # –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π ID
    events_result = service.events().list(
        calendarId=calendar_id,
        timeMin=now,
        timeMax=end_time,
        singleEvents=True,
        orderBy='startTime'
    ).execute()

    events = events_result.get('items', [])

    if not events:
        print("–ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π.")
        return

    for event in events:
        event_id = event.get('id')
        if event_id in sent_event_ids:
            continue

        summary = event.get('summary', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        start = event['start'].get('dateTime', event['start'].get('date'))

        dt = datetime.fromisoformat(start.replace("Z", "+00:00"))
        formatted_time = dt.strftime("%H:%M %d.%m.%Y")

        message = f"\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Discord: \U0001F4CC **{summary}**\n\n\U0001F552 {formatted_time}"
        print(message)

        try:
            requests.post(DISCORD_WEBHOOK_URL, json={"content": message})
            sent_event_ids.add(event_id)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord: {e}")

# –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
if __name__ == "__main__":
    while True:
        try:
            check_upcoming_events()
        except Exception as e:
            print(f"‚ùóÔ∏è–û—à–∏–±–∫–∞: {e}")
        time.sleep(60)
